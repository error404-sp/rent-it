{"ast":null,"code":"import validator from 'validator';\n/*\n * This class contains methods for validating fields using 'validator.js' library methods\n * The methods return error message if validation failed and false otherwise\n * You can use all supported validators and sanitizers of 'validator.js' libaray\n*/\n\nclass ValidateFields {\n  /*\n   * A method that takes in the email\n   * Validates it\n   * Returns the response either error or false if there is no error\n   */\n  validateEmptyFields(firstName, lastName, address, city, state, property, description, pricing) {\n    if (validator.isEmpty(firstName, lastName, address, city, state, property, description, pricing)) {\n      return 'This field is required';\n    }\n\n    return false;\n  }\n\n  validateZip(zip) {\n    if (validator.isEmpty(zip)) {\n      return 'This field is required';\n    } else if (!validator.isLength(zip, {\n      min: 6,\n      max: 6\n    })) {\n      return 'Zip Code must be a 6 digit number';\n    }\n\n    return false;\n  }\n\n  validateEmail(email) {\n    if (validator.isEmpty(email)) {\n      return 'This field is required';\n    } else if (!validator.isEmail(email)) {\n      return 'Invalid Email';\n    }\n\n    return false;\n  }\n\n  validatePhoneNo(phone) {\n    if (validator.isEmpty(phone)) {\n      return 'This field is required';\n    } else if (!validator.isLength(phone, {\n      min: 10,\n      max: 10\n    })) {\n      return 'Phone number must be a 10 digit number';\n    }\n\n    return false;\n  }\n\n}\n\nconst validateFields = new ValidateFields(); // export the class instance, so we can import and use it anywhere\n\nexport { validateFields };","map":{"version":3,"sources":["/home/error404_sp/Desktop/rent it/src/stepForm/Validation.js"],"names":["validator","ValidateFields","validateEmptyFields","firstName","lastName","address","city","state","property","description","pricing","isEmpty","validateZip","zip","isLength","min","max","validateEmail","email","isEmail","validatePhoneNo","phone","validateFields"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAN,CAAqB;AACnB;AACF;AACA;AACA;AACA;AAEEC,EAAAA,mBAAmB,CAACC,SAAD,EAAWC,QAAX,EAAoBC,OAApB,EAA4BC,IAA5B,EAAiCC,KAAjC,EAAuCC,QAAvC,EAAgDC,WAAhD,EAA4DC,OAA5D,EAAoE;AACrF,QAAIV,SAAS,CAACW,OAAV,CAAkBR,SAAlB,EAA4BC,QAA5B,EAAqCC,OAArC,EAA6CC,IAA7C,EAAkDC,KAAlD,EAAwDC,QAAxD,EAAiEC,WAAjE,EAA6EC,OAA7E,CAAJ,EAA0F;AACtF,aAAO,wBAAP;AACH;;AACD,WAAO,KAAP;AACD;;AAEDE,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,QAAIb,SAAS,CAACW,OAAV,CAAkBE,GAAlB,CAAJ,EAA2B;AACvB,aAAO,wBAAP;AACH,KAFD,MAGK,IAAI,CAACb,SAAS,CAACc,QAAV,CAAmBD,GAAnB,EAAwB;AAAEE,MAAAA,GAAG,EAAE,CAAP;AAAWC,MAAAA,GAAG,EAAE;AAAhB,KAAxB,CAAL,EAAmD;AACtD,aAAO,mCAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,QAAIlB,SAAS,CAACW,OAAV,CAAkBO,KAAlB,CAAJ,EAA8B;AAC5B,aAAO,wBAAP;AACD,KAFD,MAEO,IAAI,CAAClB,SAAS,CAACmB,OAAV,CAAkBD,KAAlB,CAAL,EAA+B;AACpC,aAAO,eAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDE,EAAAA,eAAe,CAACC,KAAD,EAAO;AACpB,QAAIrB,SAAS,CAACW,OAAV,CAAkBU,KAAlB,CAAJ,EAA8B;AAC1B,aAAO,wBAAP;AACD,KAFH,MAGK,IAAI,CAACrB,SAAS,CAACc,QAAV,CAAmBO,KAAnB,EAA0B;AAAEN,MAAAA,GAAG,EAAE,EAAP;AAAYC,MAAAA,GAAG,EAAE;AAAjB,KAA1B,CAAL,EAAsD;AACrD,aAAO,wCAAP;AACH;;AACH,WAAO,KAAP;AACD;;AAzCkB;;AA6CrB,MAAMM,cAAc,GAAG,IAAIrB,cAAJ,EAAvB,C,CAEA;;AACA,SAASqB,cAAT","sourcesContent":["import validator from 'validator';\n\n/*\n * This class contains methods for validating fields using 'validator.js' library methods\n * The methods return error message if validation failed and false otherwise\n * You can use all supported validators and sanitizers of 'validator.js' libaray\n*/\n\nclass ValidateFields {\n  /*\n   * A method that takes in the email\n   * Validates it\n   * Returns the response either error or false if there is no error\n   */\n\n  validateEmptyFields(firstName,lastName,address,city,state,property,description,pricing){\n    if (validator.isEmpty(firstName,lastName,address,city,state,property,description,pricing)){\n        return 'This field is required';\n    }\n    return false;\n  }\n\n  validateZip(zip) {\n    if (validator.isEmpty(zip)){\n        return 'This field is required';\n    }\n    else if (!validator.isLength(zip, { min: 6 , max: 6 })) {\n      return 'Zip Code must be a 6 digit number';\n    }\n    return false;\n  }\n\n  validateEmail(email) {\n    if (validator.isEmpty(email)) {\n      return 'This field is required';\n    } else if (!validator.isEmail(email)) {\n      return 'Invalid Email';\n    }\n    return false;\n  }\n\n  validatePhoneNo(phone){\n    if (validator.isEmpty(phone)) {\n        return 'This field is required';\n      }   \n    else if (!validator.isLength(phone, { min: 10 , max: 10 })){\n          return 'Phone number must be a 10 digit number'\n      }\n    return false;\n  }  \n\n}\n\nconst validateFields = new ValidateFields();\n\n// export the class instance, so we can import and use it anywhere\nexport { validateFields };"]},"metadata":{},"sourceType":"module"}