{"ast":null,"code":"var _jsxFileName = \"/home/error404_sp/Desktop/rent it/src/stepForm/PropertyDescription.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { validateFields } from \"./Validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PropertyDescription = ({\n  formData,\n  setForm,\n  navigation\n}) => {\n  _s();\n\n  const {\n    title,\n    description,\n    pricing\n  } = formData;\n  const [titleError, setTitleError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n  const [pricingError, setPricingError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"STEP 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What is the name of your property?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: titleError,\n      label: \"Property Title\",\n      name: \"title\",\n      value: title,\n      onChange: e => {\n        setForm(e);\n        const isTitleIncorrect = validateFields.validateEmptyFields(e.target.value);\n        setTitleError(isTitleIncorrect);\n      },\n      helperText: titleError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"How your property looks like?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: descriptionError,\n      label: \"Property Description\",\n      name: \"description\",\n      value: description,\n      onChange: e => {\n        setForm(e);\n        const isDescriptionIncorrect = validateFields.validateEmptyFields(e.target.value);\n        setDescriptionError(isDescriptionIncorrect);\n      },\n      helperText: descriptionError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What is price of your property?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: pricingError,\n      label: \"Property price(for one night stay in Rs: )\",\n      name: \"pricing\",\n      value: pricing,\n      onChange: e => {\n        setForm(e);\n        const isPriceIncorrect = validateFields.validateEmptyFields(e.target.value);\n        setPricingError(isPriceIncorrect);\n      },\n      helperText: pricingError,\n      type: \"number\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"1rem\",\n          color: \"#f74c4f\",\n          backgroundColor: \"#fff\",\n          border: \"1px solid lightgray\",\n          fontWeight: \"700\"\n        },\n        onClick: () => navigation.previous(),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          color: \"#fff\",\n          backgroundColor: \"#f74c4f\"\n        },\n        onClick: () => {\n          if (description === \"\" || pricing === \"\") {\n            alert(\"All the fields are required\");\n          } else {\n            navigation.next();\n          }\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PropertyDescription, \"JYXAHav8uKbrXU5LBR8ttK5miD0=\");\n\n_c = PropertyDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertyDescription\");","map":{"version":3,"sources":["/home/error404_sp/Desktop/rent it/src/stepForm/PropertyDescription.js"],"names":["React","useState","Container","TextField","Button","validateFields","PropertyDescription","formData","setForm","navigation","title","description","pricing","titleError","setTitleError","descriptionError","setDescriptionError","pricingError","setPricingError","e","isTitleIncorrect","validateEmptyFields","target","value","isDescriptionIncorrect","isPriceIncorrect","marginTop","marginRight","color","backgroundColor","border","fontWeight","previous","alert","next"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { validateFields } from \"./Validation\";\n\nexport const PropertyDescription = ({ formData, setForm, navigation }) => {\n  const { title, description, pricing } = formData;\n\n  const [titleError, setTitleError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n  const [pricingError, setPricingError] = useState(false);\n  return (\n    <Container maxWidth=\"xs\">\n      <h4>STEP 4</h4>\n      <br />\n      <br />\n      <h2>What is the name of your property?</h2>\n      <TextField\n        error={titleError}\n        label=\"Property Title\"\n        name=\"title\"\n        value={title}\n        onChange={(e) => {\n          setForm(e);\n          const isTitleIncorrect = validateFields.validateEmptyFields(\n            e.target.value\n          );\n          setTitleError(isTitleIncorrect);\n        }}\n        helperText={titleError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <br />\n      <br />\n      <h2>How your property looks like?</h2>\n      <TextField\n        error={descriptionError}\n        label=\"Property Description\"\n        name=\"description\"\n        value={description}\n        onChange={(e) => {\n          setForm(e);\n          const isDescriptionIncorrect = validateFields.validateEmptyFields(\n            e.target.value\n          );\n          setDescriptionError(isDescriptionIncorrect);\n        }}\n        helperText={descriptionError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <br />\n      <br />\n      <h2>What is price of your property?</h2>\n      <TextField\n        error={pricingError}\n        label=\"Property price(for one night stay in Rs: )\"\n        name=\"pricing\"\n        value={pricing}\n        onChange={(e) => {\n          setForm(e);\n          const isPriceIncorrect = validateFields.validateEmptyFields(\n            e.target.value\n          );\n          setPricingError(isPriceIncorrect);\n        }}\n        helperText={pricingError}\n        type=\"number\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <div style={{ marginTop: \"1rem\" }}>\n        <Button\n          variant=\"contained\"\n          style={{\n            marginRight: \"1rem\",\n            color: \"#f74c4f\",\n            backgroundColor: \"#fff\",\n            border: \"1px solid lightgray\",\n            fontWeight: \"700\",\n          }}\n          onClick={() => navigation.previous()}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          style={{ color: \"#fff\", backgroundColor: \"#f74c4f\" }}\n          onClick={() => {\n            if (description === \"\" || pricing === \"\") {\n              alert(\"All the fields are required\");\n            } else {\n              navigation.next();\n            }\n          }}\n        >\n          Next\n        </Button>\n      </div>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}