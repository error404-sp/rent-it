{"ast":null,"code":"var _jsxFileName = \"/home/error404_sp/Desktop/rent it/src/stepForm/Names.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { validateFields } from \"./Validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Names = ({\n  formData,\n  setForm,\n  navigation\n}) => {\n  _s();\n\n  const {\n    firstName,\n    lastName\n  } = formData;\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [lastNameError, setLastNameError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lets start listing your space!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"STEP 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What's Your Name?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: firstNameError,\n      label: \"First Name\",\n      name: \"firstName\",\n      value: firstName,\n      onChange: e => {\n        setForm(e);\n        const isFirstNameIncorrect = validateFields.validateEmptyFields(e.target.value);\n        setFirstNameError(isFirstNameIncorrect);\n      },\n      helperText: firstNameError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: lastNameError,\n      label: \"Last Name\",\n      name: \"lastName\",\n      value: lastName,\n      onChange: e => {\n        setForm(e);\n        const isLastNameIncorrect = validateFields.validateEmptyFields(e.target.value);\n        setLastNameError(isLastNameIncorrect);\n      },\n      helperText: lastNameError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      fullWidth: true,\n      style: {\n        marginTop: \"1rem\",\n        color: \"#fff\",\n        backgroundColor: \"#f74c4f\"\n      },\n      onClick: () => {\n        if (firstName === \"\" || lastName === \"\") {\n          alert(\"All the fields are required\");\n        } else {\n          navigation.next();\n        }\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Names, \"U5PDWl/Fyt3Sm2cYWaabVpIZTuo=\");\n\n_c = Names;\n\nvar _c;\n\n$RefreshReg$(_c, \"Names\");","map":{"version":3,"sources":["/home/error404_sp/Desktop/rent it/src/stepForm/Names.js"],"names":["React","useState","Container","TextField","Button","validateFields","Names","formData","setForm","navigation","firstName","lastName","firstNameError","setFirstNameError","lastNameError","setLastNameError","e","isFirstNameIncorrect","validateEmptyFields","target","value","isLastNameIncorrect","marginTop","color","backgroundColor","alert","next"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { validateFields } from \"./Validation\";\n\nexport const Names = ({ formData, setForm, navigation }) => {\n  const { firstName, lastName } = formData;\n\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [lastNameError, setLastNameError] = useState(false);\n\n  return (\n    <Container maxWidth=\"xs\">\n      <h1>Lets start listing your space!</h1>\n      <br />\n      <h4>STEP 1</h4>\n      <br />\n      <br />\n      <h2>What's Your Name?</h2>\n      <TextField\n        error={firstNameError}\n        label=\"First Name\"\n        name=\"firstName\"\n        value={firstName}\n        onChange={(e) => {\n          setForm(e);\n          const isFirstNameIncorrect = validateFields.validateEmptyFields(\n            e.target.value\n          );\n          setFirstNameError(isFirstNameIncorrect);\n        }}\n        helperText={firstNameError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <TextField\n        error={lastNameError}\n        label=\"Last Name\"\n        name=\"lastName\"\n        value={lastName}\n        onChange={(e) => {\n          setForm(e);\n          const isLastNameIncorrect = validateFields.validateEmptyFields(\n            e.target.value\n          );\n          setLastNameError(isLastNameIncorrect);\n        }}\n        helperText={lastNameError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <Button\n        variant=\"contained\"\n        fullWidth\n        style={{ marginTop: \"1rem\", color: \"#fff\", backgroundColor: \"#f74c4f\" }}\n        onClick={() => {\n          if (firstName === \"\" || lastName === \"\") {\n            alert(\"All the fields are required\");\n          } else {\n            navigation.next();\n          }\n        }}\n      >\n        Next\n      </Button>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}