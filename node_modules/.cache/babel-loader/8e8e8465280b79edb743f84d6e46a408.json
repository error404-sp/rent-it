{"ast":null,"code":"var _jsxFileName = \"/home/error404_sp/Desktop/rent it/src/stepForm/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Button, IconButton } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Upload = ({\n  images,\n  navigation,\n  handleImages\n}) => {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    const filesArray = Array.from(images);\n    setFiles(filesArray);\n    makeImgArray(Array.from(images));\n  }, [images]);\n\n  const makeImgArray = filesArray => {\n    Promise.all(filesArray.map(file => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", ev => {\n          resolve(ev.target.result);\n        });\n        reader.addEventListener(\"error\", reject);\n        reader.readAsDataURL(file);\n      });\n    })).then(images => {\n      /* Once all promises are resolved, update state with image URI array */\n      setFiles(images);\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  const handleUpload = () => {\n    document.getElementById(\"imgUpload\").click();\n\n    document.getElementById(\"imgUpload\").onchange = e => {\n      const files = document.getElementById(\"imgUpload\").files;\n      handleImages(files);\n\n      if (files) {\n        const filesArray = Array.from(files);\n        makeImgArray(filesArray);\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"STEP 6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleUpload,\n      children: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      accept: \"image/*\",\n      id: \"imgUpload\",\n      style: {\n        display: \"none\"\n      },\n      multiple: true,\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"1rem\",\n          color: \"#f74c4f\",\n          backgroundColor: \"#fff\",\n          border: \"1px solid lightgray\",\n          fontWeight: \"700\"\n        },\n        onClick: () => navigation.previous(),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          color: \"#fff\",\n          backgroundColor: \"#f74c4f\"\n        },\n        onClick: () => {\n          if (images.length > 0) {\n            navigation.next();\n          } else {\n            alert(\"Please upload images\");\n          }\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), files.map((imageURI, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"200px\",\n          height: \"auto\"\n        },\n        src: imageURI,\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Upload, \"Q2RYUcr07MgGv5yVCV31YurpQrA=\");\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/error404_sp/Desktop/rent it/src/stepForm/Upload.js"],"names":["React","useEffect","useState","Container","Button","IconButton","CloudUploadIcon","Upload","images","navigation","handleImages","files","setFiles","filesArray","Array","from","makeImgArray","Promise","all","map","file","resolve","reject","reader","FileReader","addEventListener","ev","target","result","readAsDataURL","then","error","console","handleUpload","document","getElementById","click","onchange","e","display","marginTop","marginRight","color","backgroundColor","border","fontWeight","previous","length","next","alert","imageURI","idx","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Button, IconButton } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\n\nexport const Upload = ({ images, navigation, handleImages }) => {\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    const filesArray = Array.from(images);\n    setFiles(filesArray);\n    makeImgArray(Array.from(images));\n  }, [images]);\n\n  const makeImgArray = (filesArray) => {\n    Promise.all(\n      filesArray.map((file) => {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.addEventListener(\"load\", (ev) => {\n            resolve(ev.target.result);\n          });\n          reader.addEventListener(\"error\", reject);\n          reader.readAsDataURL(file);\n        });\n      })\n    ).then(\n      (images) => {\n        /* Once all promises are resolved, update state with image URI array */\n        setFiles(images);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  const handleUpload = () => {\n    document.getElementById(\"imgUpload\").click();\n\n    document.getElementById(\"imgUpload\").onchange = (e) => {\n      const files = document.getElementById(\"imgUpload\").files;\n      handleImages(files);\n      if (files) {\n        const filesArray = Array.from(files);\n        makeImgArray(filesArray);\n      }\n    };\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <h4>STEP 6</h4>\n      <br />\n      {/* {JSON.parse(formData)} */}\n      <IconButton onClick={handleUpload}>\n        <CloudUploadIcon />\n      </IconButton>\n      <input\n        accept=\"image/*\"\n        id=\"imgUpload\"\n        style={{ display: \"none\" }}\n        multiple\n        type=\"file\"\n      />\n\n      <div style={{ marginTop: \"1rem\" }}>\n        <Button\n          variant=\"contained\"\n          style={{\n            marginRight: \"1rem\",\n            color: \"#f74c4f\",\n            backgroundColor: \"#fff\",\n            border: \"1px solid lightgray\",\n            fontWeight: \"700\",\n          }}\n          onClick={() => navigation.previous()}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          style={{ color: \"#fff\", backgroundColor: \"#f74c4f\" }}\n          onClick={() => {\n            if (images.length > 0) {\n              navigation.next();\n            } else {\n              alert(\"Please upload images\");\n            }\n          }}\n        >\n          Next\n        </Button>\n      </div>\n      <br />\n      {files.map((imageURI, idx) => (\n        <div key={idx}>\n          <img\n            style={{ width: \"200px\", height: \"auto\" }}\n            src={imageURI}\n            alt=\"Uploaded\"\n          />\n          <br />\n        </div>\n      ))}\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}