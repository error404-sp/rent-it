{"ast":null,"code":"var _jsxFileName = \"/home/error404_sp/Desktop/rent it/src/stepForm/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./HideArrows.css\";\nimport { validateFields } from \"./Validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Contact = ({\n  formData,\n  setForm,\n  navigation\n}) => {\n  _s();\n\n  const {\n    phone,\n    email\n  } = formData;\n  const [phoneNoError, setPhoneNoError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"STEP 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"What's your contact info?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: phoneNoError,\n      label: \"Phone\",\n      name: \"phone\",\n      value: phone,\n      type: \"number\",\n      style: {\n        className: \"input\"\n      },\n      onChange: e => {\n        setForm(e);\n        const isPhoneNoIncorrect = validateFields.validatePhoneNo(e.target.value);\n        setPhoneNoError(isPhoneNoIncorrect);\n      },\n      helperText: phoneNoError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: emailError,\n      label: \"E-Mail\",\n      name: \"email\",\n      value: email,\n      onChange: e => {\n        setForm(e);\n        const isEmailIncorrect = validateFields.validateEmail(e.target.value);\n        setEmailError(isEmailIncorrect);\n      },\n      helperText: emailError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"1rem\",\n          color: \"#f74c4f\",\n          backgroundColor: \"#fff\",\n          border: \"1px solid lightgray\",\n          fontWeight: \"700\"\n        },\n        onClick: () => navigation.previous(),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          color: \"#fff\",\n          backgroundColor: \"#f74c4f\"\n        },\n        onClick: () => {\n          const regex_pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n          if (phone === \"\" || email === \"\") {\n            alert(\"All the fields are required\");\n          } else if (regex_pattern.test(email) === false) {\n            alert(\"The email address is invalid\");\n          } else if (phone.length !== 10) {\n            alert(\"Phone number must be a 10 digit number\");\n          } else {\n            navigation.next();\n          }\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"NGwGxZK1VPLj//NQyemXwMxOt/0=\");\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/home/error404_sp/Desktop/rent it/src/stepForm/Contact.js"],"names":["React","useState","Container","TextField","Button","validateFields","Contact","formData","setForm","navigation","phone","email","phoneNoError","setPhoneNoError","emailError","setEmailError","className","e","isPhoneNoIncorrect","validatePhoneNo","target","value","isEmailIncorrect","validateEmail","marginTop","marginRight","color","backgroundColor","border","fontWeight","previous","regex_pattern","alert","test","length","next"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./HideArrows.css\";\nimport { validateFields } from \"./Validation\";\n\nexport const Contact = ({ formData, setForm, navigation }) => {\n  const { phone, email } = formData;\n\n  const [phoneNoError, setPhoneNoError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n\n  return (\n    <Container maxWidth=\"xs\">\n      <h4>STEP 5</h4>\n      <br />\n      <br />\n      <h2>What's your contact info?</h2>\n      <TextField\n        error={phoneNoError}\n        label=\"Phone\"\n        name=\"phone\"\n        value={phone}\n        type=\"number\"\n        style={{ className: \"input\" }}\n        onChange={(e) => {\n          setForm(e);\n          const isPhoneNoIncorrect = validateFields.validatePhoneNo(\n            e.target.value\n          );\n          setPhoneNoError(isPhoneNoIncorrect);\n        }}\n        helperText={phoneNoError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <TextField\n        error={emailError}\n        label=\"E-Mail\"\n        name=\"email\"\n        value={email}\n        onChange={(e) => {\n          setForm(e);\n          const isEmailIncorrect = validateFields.validateEmail(e.target.value);\n          setEmailError(isEmailIncorrect);\n        }}\n        helperText={emailError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <div style={{ marginTop: \"1rem\" }}>\n        <Button\n          variant=\"contained\"\n          style={{\n            marginRight: \"1rem\",\n            color: \"#f74c4f\",\n            backgroundColor: \"#fff\",\n            border: \"1px solid lightgray\",\n            fontWeight: \"700\",\n          }}\n          onClick={() => navigation.previous()}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          style={{ color: \"#fff\", backgroundColor: \"#f74c4f\" }}\n          onClick={() => {\n            const regex_pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n            if (phone === \"\" || email === \"\") {\n              alert(\"All the fields are required\");\n            } else if (regex_pattern.test(email) === false) {\n              alert(\"The email address is invalid\");\n            } else if (phone.length !== 10) {\n              alert(\"Phone number must be a 10 digit number\");\n            } else {\n              navigation.next();\n            }\n          }}\n        >\n          Next\n        </Button>\n      </div>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}