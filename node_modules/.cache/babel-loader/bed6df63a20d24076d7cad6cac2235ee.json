{"ast":null,"code":"var _jsxFileName = \"/home/error404_sp/Desktop/rent it/src/stepForm/Address.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./HideArrows.css\";\nimport { validateFields } from \"./Validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Address = ({\n  formData,\n  setForm,\n  navigation\n}) => {\n  _s();\n\n  const {\n    address,\n    city,\n    state,\n    zip\n  } = formData;\n  const [addressError, setAddressError] = useState(false);\n  const [cityError, setCityError] = useState(false);\n  const [stateError, setStateError] = useState(false);\n  const [zipError, setZipError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"STEP 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Where\\u2019s your place located?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: addressError,\n      label: \"Address\",\n      name: \"address\",\n      value: address,\n      onChange: e => {\n        setForm(e);\n        const isAddressIncorrect = validateFields.validateEmptyFields(e.target.value);\n        setAddressError(isAddressIncorrect);\n      },\n      helperText: addressError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: cityError,\n      label: \"City\",\n      name: \"city\",\n      value: city,\n      onChange: e => {\n        setForm(e);\n        const isCityIncorrect = validateFields.validateEmptyFields(e.target.value);\n        setCityError(isCityIncorrect);\n      },\n      helperText: cityError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: stateError,\n      label: \"State\",\n      name: \"state\",\n      value: state,\n      onChange: e => {\n        setForm(e);\n        const isStateIncorrect = validateFields.validateEmptyFields(e.target.value);\n        setStateError(isStateIncorrect);\n      },\n      helperText: stateError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: zipError,\n      label: \"Zip\",\n      name: \"zip\",\n      type: \"number\",\n      value: zip,\n      style: {\n        className: \"input\"\n      },\n      onChange: e => {\n        setForm(e);\n        const isZipIncorrect = validateFields.validateZip(e.target.value);\n        setZipError(isZipIncorrect);\n      },\n      helperText: zipError,\n      margin: \"normal\",\n      variant: \"outlined\",\n      autoComplete: \"off\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"1rem\",\n          color: \"#f74c4f\",\n          backgroundColor: \"#fff\",\n          border: \"1px solid lightgray\",\n          fontWeight: \"700\"\n        },\n        onClick: () => navigation.previous(),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: {\n          color: \"#fff\",\n          backgroundColor: \"#f74c4f\"\n        },\n        onClick: () => {\n          if (address === \"\" || city === \"\" || state === \"\" || zip === \"\") {\n            alert(\"All the fields are required\");\n          } else if (zip.length !== 6) {\n            alert(\"Zip code must be a 6 digit number\");\n          } else {\n            navigation.next();\n          }\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Address, \"FY2NfpcOpYHZh4mlN+564GGqpCM=\");\n\n_c = Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["/home/error404_sp/Desktop/rent it/src/stepForm/Address.js"],"names":["React","useState","Container","TextField","Button","validateFields","Address","formData","setForm","navigation","address","city","state","zip","addressError","setAddressError","cityError","setCityError","stateError","setStateError","zipError","setZipError","e","isAddressIncorrect","validateEmptyFields","target","value","isCityIncorrect","isStateIncorrect","className","isZipIncorrect","validateZip","marginTop","marginRight","color","backgroundColor","border","fontWeight","previous","alert","length","next"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./HideArrows.css\"\nimport { validateFields } from \"./Validation\";\n\nexport const Address = ({ formData, setForm, navigation }) => {\n  const { address, city, state, zip } = formData;\n\n  const [addressError, setAddressError] = useState(false)\n  const [cityError, setCityError ] = useState(false)\n  const [stateError, setStateError ] = useState(false)\n  const [zipError, setZipError ] = useState(false)\n\n  return (\n    <Container maxWidth=\"xs\">\n      <h4>STEP 2</h4>\n      <br/>\n      <br/>\n      <h2>Where’s your place located?</h2>\n      <TextField\n        error = {addressError}\n        label=\"Address\"\n        name=\"address\"\n        value={address}\n        onChange={(e) => {\n          setForm(e)\n          const isAddressIncorrect = validateFields.validateEmptyFields(e.target.value)\n            setAddressError(isAddressIncorrect)\n\n        }}\n        helperText = {addressError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <TextField\n        error = {cityError}\n        label=\"City\"\n        name=\"city\"\n        value={city}\n        onChange={(e) => {\n          setForm(e)\n          const isCityIncorrect = validateFields.validateEmptyFields(e.target.value)\n            setCityError(isCityIncorrect)\n\n        }}\n        helperText = {cityError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <TextField\n        error = {stateError}\n        label=\"State\"\n        name=\"state\"\n        value={state}\n        onChange={(e) => {\n          setForm(e)\n          const isStateIncorrect = validateFields.validateEmptyFields(e.target.value)\n            setStateError(isStateIncorrect)\n\n        }}\n        helperText = {stateError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <TextField\n        error= {zipError}\n        label=\"Zip\"\n        name=\"zip\"\n        type=\"number\" \n        value={zip}\n        style={{className: \"input\"}}\n        onChange={(e) => {\n          setForm(e)\n          const isZipIncorrect = validateFields.validateZip(e.target.value)\n            setZipError(isZipIncorrect)\n        }}\n        helperText = {zipError}\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n      />\n      <div style={{ marginTop: \"1rem\" }}>\n        <Button\n          variant=\"contained\"\n          style={{ marginRight: \"1rem\", color: \"#f74c4f\", backgroundColor :\"#fff\", border: \"1px solid lightgray\", fontWeight: \"700\"}}\n          onClick={() => navigation.previous()}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          style={{color: \"#fff\", backgroundColor :\"#f74c4f\"}}\n          onClick={() => \n            {\n              if (address === \"\" || city === \"\" || state === \"\" || zip === \"\")\n              {\n                alert(\"All the fields are required\")\n              }\n              else if(zip.length !== 6)\n              {\n                alert(\"Zip code must be a 6 digit number\")\n              }\n            else{\n              navigation.next()  \n            }\n          }\n          }\n        >\n          Next\n        </Button>\n      </div>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}